<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
    body {
        background-color: wheat;
    }

    pre {
        color: red;
    }   
    </style>
    <title>Глава 4.</title>
</head>
<body>
    <h1>Глава 4</h1>
    <h2>Массивы</h2>
    <p>
    Массивы в PHP представляют собой инструмент для хранения, обработки и управления
    данными. Они позволяют организовывать информацию в упорядоченные коллекции и 
    обращаться к ней по ключу или индексу. В PHP есть несколько типов массивов,
    включая индексированные и ассоциативные массивы, а также многомерные и 
    вложенные массивы, которые обеспечивают гибкость при работе с данными 
    различной структуры.
    </p>
    <pre>
&lt;?php
// Пустой массив:
    $A=array();
    print("Массив \$A:\n");

// Содержание массива:
    print_r($A);

// В массив добавляются элементы:
    $A[0] = "Красный";
    $A[1] = "Желтый";
    $A[2] = "Зеленый";
    print("Массив \$A:\n");

// Содержание массива:
    print_r($A); 
    
// Массив из трех целочисленных:
    $B=array(100, 200, 300);
    print("Массив \$B:\n");

// Содержание массива: 
    print_r($B);
    print("\$B =[");

// Поэлементное отображение массива:
    for($k=0;$k < count($B);$k++) {
    print($B[$k]." ");
}
    print("]\n");

// Массив с элементами разных типов:
    $C=["Первый", 2, 3.3];
    print("Массин \$C:\n");

// Содержание массива:
    print_r("$C");
?&gt;
</pre>
<p>
    Результат выполнения будет таким:
</p>
<ol>
    <li>Будет создан пустой массив $A.</li>
    <li>Поскольку массив $A пуст, вызов print_r($A) ничего не выведет.</li>
    <li>В массив $A будут добавлены элементы "Красный", "Жёлтый" и "Зелёный".</li>
    <li>Будет выведено содержимое массива $A: Array ( [0] => Красный [1] => Жёлтый [2] => Зелёный ).</li>
    <li>Создается массив $B из трёх целочисленных элементов: 100, 200 и 300.</li>
    <li>Выведится содержимое массива $B: Array ( [0] => 100 [1] => 200 [2] => 300 ).</li>
    <li>Будет выведена строка $B =, за которой последуют три пробела.</li>
    <li>Использован цикл for для поэлементного отображения массива $B.</li>
    <li>Будет создан массив $C с элементами разных типов: "Первый", 2 и 3.3.</li>
    <li>Выводится содержимое массива $C: Array ( [0] => Первый [1] => 2 [2] => 3.3 ).</li>
</ol>
<p>
Сначала создаётся пустой массив $A, затем в него добавляются элементы, после чего 
выводится его содержимое. Далее создаётся массив $B из трёх целочисленных элементов
и также выводится его содержимое. Затем используется цикл for для поэлементного 
отображения массива $B. Наконец, создаётся массив $C с элементами разных типов и 
также выводится его содержимое.
</p>
<hr>
<br>
<p>
    Кроме ф-и count() для определения длины размера массива можно ипользовать ф-ю 
    sizeof().
</p>
<p>
    Давай вспомним что мы пользуемся некоторой терминогией.В Массивах содержаться
    элементы. У элементов есть значение и id ключи.ID ключ для многомерных
    массивов. Ниже пример массива с элементами для которых для которых явно 
    указаны ключи.
</p>
<pre>
&lt;?php
//Пример массива с эл-ми и ключами разных типов:
$mixedArray = array(
 'stringKey' => 'Это строка',
 10 => true, // Целочисленный ключ со значением логического типа
 'anotherString' => array(1, 2, 3), // Ключ - строка, значение - массив
 'numericKey' => 42.5 // Ключ - число, значение - число с плавающей точкой
);

var_dump($mixedArray);

// Результ выведется таким
array(4) { 
    ["stringKey"]=> string(19) 
    "Это строка" [10]=> bool(true) 
    ["anotherString"]=> array(3) 
    { 
        [0]=> int(1) 
        [1]=> int(2) 
        [2]=> int(3) 
    } 
    ["numericKey"]=> float(42.5) }

?&gt;
</pre>
<h3>Дополнение</h3>
<p>
    Как добавить новый эл-т в массив? Делается это при помощи команды вида
    массив()=значение. Тоесть обращаемся к эл-ту указав круглые скобки не указывая
    ключ. В таком случае ключ или назовем индекс высчитывается автоматически.индекс
    будет плюс один от самого большого предыдущего.
</p>
<p>
    Как удалить элемент с массива? Применяем команду unset() передав ей аргументом
    удаляемый элемент.
</p>
<hr>
<br>
<h2>Цикл по массиву</h2>
<h3>Цикл по массиву при помощи <strong>оператора цикла foreach</strong>с использованием индекса</h3>
<p>
    Синтаксис выглядит так: <pre>
        foreach(массив as ключ=>значение) {
            # Какие то команды
        }
    </pre>
</p>
<p>
    Вот небольшой пример:
</p>
<pre>
&lt;?php
$myArray = array("Яблоко", "Апельсин", "Груша");

foreach ($myArray as $value) {
echo "$value<br>";
}
?&gt;
</pre>
<p>
В массиве содержится три элемента: “Яблоко”, “Апельсин”, “Груша”. 
Цикл foreach перебирает каждый элемент массива, присваивая его значение
переменной $value. Затем выполняется код внутри блока цикла, в данном 
случае - вывод значения элемента на экран.   
</p>
<p>
    Также существует другой вариант синтаксиса. Вместо открывающихся фигурных
    скобках, ставится двоеточие
</p>
<p>
    Синтаксис выглядит так: 
    <pre>
        foreach(массив as ключ=>значение) :
            # Какие то команды
        
        endforeach;    
    </pre>
</p>
<p>
    Возьмем предыдущий пример и просто уберем фигурные скобки а вконце допишем
    инструкцию endforeach и поставим точку с запятой.
</p>
<pre>
&lt;?php
$myArray = array("Яблоко", "Апельсин", "Груша");

foreach ($myArray as $value) :
echo "$value<br>";

endforeach;
?&gt;
</pre>
<hr>
<br>
<h2>
    Многомерные массивы.
</h2>
<p>
    Многомерные массивы. Это означает то, что внутри массива могут быть еще массивы. 
    Также элементами этого массива тоже могуть быть массивы.
</p>
<p>
    Многомерный массив создается так. Нужно при создании массива, один или несколько
    эл-в описать как массив. Рассмотрим  пример:
</p>
<pre>
&lt;?php
// Многомерный массив:
$A = [
[1, 2, 3, 4, 5],
["A", "B", "C", "D", "E"],
[6, 7, 8, 9]
];
foreach ($A as $row) {
foreach ($row as $column) {
echo "$column ";
}
echo "<br>";
}
?&gt;
</pre>
<pre>
    //Результат выведется такой
    1 2 3 4 5
    A B C D E
    6 7 8 9
</pre>
<hr>
<br>
<h2>
    
</h2>
</body>
</html>