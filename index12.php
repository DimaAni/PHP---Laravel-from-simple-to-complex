<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
    body {
        background-color: wheat;
        color: black;
    }

    pre {
        color: red;
    }

    .ul pre {
        font-size: 18px;
        color: black;
    }
    
    </style>
    <title>Глава. 12</title>
</head>
<body>
<h1>Использование PHP</h1>
<h2>Обработка параметров запроса.</h2>
<p>
Чтобы обработать параметры запроса в PHP, можно использовать глобальный массив $_GET. В нём 
хранятся все значения, которые мы передаём через GET. Вот пример скрипта user.php, который
получает и выводит значения name и age:
</p>

    <pre>
&lt;?php
$name = "не определено";
$age = "не определен";

if (isset($_GET["name"])) {
    $name = $_GET["name"];
}

if (isset($_GET["age"])) {
    $age = $_GET["age"];
}

echo "Имя: $name <br> Возраст: $age";
?&gt;
</pre>
<p>
    В этом примере -
</p>
<ol>
    <li>Мы определяем переменные $name и $age с начальными значениями.</li>
    <li>Используем isset для проверки наличия параметров name и age в массиве $_GET.</li>
    <li>Если параметр существует, присваиваем его значение соответствующей переменной.</li>
    <li>Выводим значения переменных $name и $age.</li>
</ol>
<p>Вот пример как это будет использоваться</p>
<pre>
http://localhost/user.php?name=Ivan&age=22
</pre>
<p>
В этом случае, скрипт выведет:  // Имя : Ivan  Возраст: 22
</p>
<p>
Именно так, мы можем легко обрабатывать параметры запроса GET в PHP, используя массив $_GET.
</p>
<hr>
<br>
<h2>Использование кнопки</h2>
<p>
Для того чтобы вызвать функцию PHP при нажатии на кнопку, можно использовать тег form.
При нажатии на кнопку форма будет отправлять данные на сервер, где скрипт PHP сможет 
принять данные и вызвать нужную функцию.
</p>
<p>Ну а (Скрипт PHP (script.php))</p>
<pre>
&lt;?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    myFunction();
}

function myFunction() {
    // Здесь код функции
    echo "Функция вызвана!";
}
?&gt;
</pre>
<p>
    Пробуем разобраться что это было.
</p>
<ol>
    <li>
    Создается HTML-форма с кнопкой <input type="submit">.
    </li>
    <li>
    При нажатии на кнопку форма отправляет данные на сервер.    
    </li>
    <li>
    Скрипт PHP проверяет метод запроса (POST) и вызывает функцию myFunction.    
    </li>
    <li>
    Функция myFunction выводит сообщение “Функция вызвана!”.    
    </li>
</ol>
<hr>
<br>
<h2>
    Использование нескольких кнопок.
</h2>
<p>
Для использования нескольких кнопок в PHP, вы можете добавить несколько кнопок  с одинаковым именем,
но разными значениями. В PHP вы будете проверять, какая кнопка была нажата, и выполнять 
соответствующие действия. 
</p>
<p>Скрипт PHP (script.php)</p>
<pre>
&lt;?php
if ($_REQUEST['btn_submit'] == "Кнопка 1") {
echo "Вы нажали кнопку 1";
} elseif ($_REQUEST['btn_submit'] == "Кнопка 2") {
echo "Вы нажали кнопку 2";
} elseif ($_REQUEST['btn_submit'] == "Кнопка 3") {
echo "Вы нажали кнопку 3";
}
?&gt;
</pre>
<p>Разбираем эту магию.</p>
<ol>
    <li>В HTML-форме добавлены три кнопки с одинаковым именем btn_submit, но разными значениями.</li>
    <li>В PHP скрипт проверяет значение нажатой кнопки и выполняет соответствующее действие.</li>
</ol>
<p>
Можете использовать либо elseif лестницу, либо switch оператор для проверки значения кнопки. 
Вот пример с использованием switch оператора:
</p>
<pre>
&lt;?php
switch ($_REQUEST['btn_submit']) {
case "Кнопка 1":
echo "Вы нажали кнопку 1";
break;
case "Кнопка 2":
echo "Вы нажали кнопку 2";
break;
case "Кнопка 3":
echo "Вы нажали кнопку 3";
break;
}
?&gt;
</pre>
<hr>
<br>
<h2>Использование списков и опций</h2>
<p>
Для использования списков и опций в PHP, вы можете использовать HTML-формы с элементами select и option
</p>
<p>Скрипт PHP (script.php)</p>
<pre>
&lt;?php
if ($_SERVER'REQUEST_METHOD' == 'POST') {
$drink = $_POST'drink';
$size = $_POST'size';

echo "Вы выбрали: $drink ($size)";
}
?&gt;
</pre>
<p>И снова разбор полетов</p>
<ol>
    <li>Создается HTML-форма с двумя списками select.</li>
    <li>Каждый список содержит опции с разными значениями.</li>
    <li>При отправке формы данные из списков передаются на сервер в виде переменных $_POST.</li>
    <li>В PHP скрипт проверяет метод запроса (POST) и получает значения выбранных опций.</li>
    <li>Выведенные значения можно использовать для дальнейшей обработки или хранения данных.</li>
</ol>
</body>
</html>